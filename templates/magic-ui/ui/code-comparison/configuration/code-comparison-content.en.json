{
  "$schema": "https://schema.croct.com/json/v1/content.json",
  "type": "structure",
  "attributes": {
    "filename": {
      "type": "text",
      "value": {
        "type": "static",
        "value": "middleware.ts"
      }
    },
    "language": {
      "type": "text",
      "value": {
        "type": "static",
        "value": "typescript"
      }
    },
    "afterCode": {
      "type": "text",
      "value": {
        "type": "static",
        "value": "import { createMiddleware, type MiddlewareFunctionProps } from '@app/(auth)/auth/_middleware';\nimport { auth } from '@/app/(auth)/auth/_middleware'; // [!code --]\nimport { auth } from '@/app/(auth)/auth/_middleware'; // [!code ++]\nimport { team } from '@/app/(team)/team/_middleware';\n \nconst middlewares = {\n  '/auth{/:path?}': auth,\n  '/team{/:slug?}': [ auth, team ],\n};\n \nexport const middleware = createMiddleware(middlewares); // [!code focus]\n \nexport const config = {\n  matcher: ['/((?!_next/|_static|_vercel|[\\\\w-]+\\\\.\\\\w+).*)'],\n};"
      }
    },
    "darkTheme": {
      "type": "text",
      "value": {
        "type": "static",
        "value": "github-dark"
      }
    },
    "beforeCode": {
      "type": "text",
      "value": {
        "type": "static",
        "value": "import { NextRequest } from 'next/server';\n \nexport const middleware = async (req: NextRequest) => {\n  let user = undefined;\n  let team = undefined;\n  const token = req.headers.get('token'); \n \n  if(req.nextUrl.pathname.startsWith('/auth')) {\n    user = await getUserByToken(token);\n \n    if(!user) {\n      return NextResponse.redirect('/login');\n    }\n  }\n \n  if(req.nextUrl.pathname.startsWith('/team')) {\n    user = await getUserByToken(token);\n \n    if(!user) {\n      return NextResponse.redirect('/login');\n    }\n \n    const slug = req.nextUrl.query.slug;\n    team = await getTeamBySlug(slug); // [!code highlight]\n \n    if(!team) { // [!code highlight]\n      return NextResponse.redirect('/'); // [!code highlight]\n    } // [!code highlight]\n  } // [!code highlight]\n \n  return NextResponse.next(); // [!code highlight]\n}\n \nexport const config = {\n  matcher: ['/((?!_next/|_static|_vercel|[\\\\w-]+\\\\.\\\\w+).*)'], // [!code highlight]\n};"
      }
    },
    "lightTheme": {
      "type": "text",
      "value": {
        "type": "static",
        "value": "github-light"
      }
    },
    "highlightColor": {
      "type": "text",
      "value": {
        "type": "static",
        "value": "#654B8529"
      }
    }
  }
}
